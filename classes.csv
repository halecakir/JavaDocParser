,url,api,class,description
0,Bolts-Android/bolts,bolts,Class AggregateException,Aggregates multiple Throwables that may be thrown in the process of a task's execution.
1,Bolts-Android/bolts,bolts,Class AppLink,Contains App Link metadata relevant for navigation on this device derived from the HTML at a given URL.
2,Bolts-Android/bolts,bolts,Class AppLink.Target,"Represents a target defined in App Link metadata, consisting of at least a package name, and optionally a URL, class name (for explicit intent handling), and an app name."
3,Bolts-Android/bolts,bolts,Class AppLinkNavigation,"Represents a pending request to navigate to an App Link. Most developers will simply use navigateInBackground(Context, Uri) to open a URL, but developers can build custom requests with additional navigation and app data attached to them by creating AppLinkNavigations themselves."
4,Bolts-Android/bolts,bolts,Enum AppLinkNavigation.NavigationResult,The result of calling AppLinkNavigation.navigate(Context) on an AppLinkNavigation.
5,Bolts-Android/bolts,bolts,Interface AppLinkResolver,"Implement this interface to provide an alternate strategy for resolving App Links that may include pre-fetching, caching, or querying for App Link data from an index provided by a service provider."
6,Bolts-Android/bolts,bolts,Class AppLinks,Provides a set of utility methods for working with incoming Intents that may contain App Link data.
7,Bolts-Android/bolts,bolts,Class Bolts,
8,Bolts-Android/bolts,bolts,Class CancellationToken,Propagates notification that operations should be canceled. Create an instance of CancellationTokenSource and pass the token returned from CancellationTokenSource#getToken() to the asynchronous operation(s). Call CancellationTokenSource#cancel() to cancel the operations. A CancellationToken can only be cancelled once - it should not be passed to future operations once cancelled.
9,Bolts-Android/bolts,bolts,Class CancellationTokenRegistration,Represents a callback delegate that has been registered with a CancellationToken.
10,Bolts-Android/bolts,bolts,Class CancellationTokenSource,Signals to a CancellationToken that it should be canceled. To create a CancellationToken first create a CancellationTokenSource then call getToken() to retrieve the token for the source.
11,Bolts-Android/bolts,bolts,Class Capture<T>,Provides a class that can be used for capturing variables in an anonymous class implementation.
12,Bolts-Android/bolts,bolts,"Interface Continuation<TTaskResult,TContinuationResult>",A function to be called after a task completes. If you wish to have the Task from a Continuation that does not return a Task be cancelled then throw a CancellationException from the Continuation.
13,Bolts-Android/bolts,bolts,Class ExecutorException,"This is a wrapper class for emphasizing that task failed due to bad Executor, rather than the continuation block it self."
14,Bolts-Android/bolts,bolts,Class MeasurementEvent,"Bolts raises events to the application by sending local broadcasts. Application integrated to Bolts can listen to events by registering BroadcastReceiver with intent filter MEASUREMENT_EVENT_NOTIFICATION_NAME. When receive the event, a String field MEASUREMENT_EVENT_NAME_KEY and A Bundle field @{link #MEASUREMENT_EVENT_ARGS_KEY} in Intent extra in indicate the event name and arguments with this event."
15,Bolts-Android/bolts,bolts,Class Task<TResult>,Represents the result of an asynchronous operation.
16,Bolts-Android/bolts,bolts,Interface Task.UnobservedExceptionHandler,"Interface for handlers invoked when a failed Task is about to be finalized, but the exception has not been consumed. The handler will execute in the GC thread, so if the handler needs to do anything time consuming or complex it is a good idea to fire off a Task to handle the exception."
17,Bolts-Android/bolts,bolts,Class TaskCompletionSource<TResult>,"Allows safe orchestration of a task's completion, preventing the consumer from prematurely completing the task. Essentially, it represents the producer side of a Task, providing access to the consumer side through the getTask() method while isolating the Task's completion mechanisms from the consumer."
18,Bolts-Android/bolts,bolts,Class UnobservedTaskException,Used to signify that a Task's error went unobserved.
19,Bolts-Android/bolts,bolts,Class WebViewAppLinkResolver,A reference implementation for an App Link resolver that uses a hidden WebView to parse the HTML containing App Link metadata.
